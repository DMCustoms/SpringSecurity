services:
  frontend:
    image: app-frontend
    build:
      context: ./frontend
    ports:
      - "3000:3000"
    networks:
      app-network:
        ipv4_address: 172.16.238.2
    depends_on: 
      - backend
      
  backend:
    image: app-backend
    build:
      context: ./backend/backend
    ports:
      - "8080:8080"
    networks:
      app-network:
        ipv4_address: 172.16.238.3
    depends_on:
      database:
        condition: service_healthy
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://172.16.238.4:5432/${DB_NAME}
      SPRING_DATASOURCE_USERNAME: ${DB_USER}
      SPRING_DATASOURCE_PASSWORD: ${DB_PASSWORD}

  database:
    image: postgres:16.0
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_DB: ${DB_NAME}
    networks:
      app-network:
        ipv4_address: 172.16.238.4
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - db-data:/var/lib/postgresql/data

networks:
  app-network:
    driver: bridge
    enable_ipv6: false
    internal: true
    ipam:
      driver: default
      config:
        - subnet: 172.16.238.0/24

volumes:
  db-data: